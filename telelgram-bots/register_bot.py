import os
from dotenv import load_dotenv
import telebot
from telebot import types
import sqlite3

load_dotenv('.env')
bot = telebot.TeleBot(os.environ['TOKEN'])

name = ''
password = ''




def execute_sql(path, command):
    db = sqlite3.connect(path)
    print(f'‚úÖ Connected to {path}')
    cursor = db.cursor()
    cursor.execute(command)
    print(f'‚úÖ Executed: {command}')
    db.commit()
    cursor.close()
    db.close()
    print(f'‚úñÔ∏è Connection to {path} closed')



def db_fetch(path, data, db_name):
    db = sqlite3.connect(path)
    print(f'‚úÖ Connected to {path}')
    cursor = db.cursor()
    cursor.execute(f'SELECT {data} FROM {db_name}')
    print(f'‚úÖ Executed: SELECT {data} FROM {db_name}')
    users = cursor.fetchall()
    db.commit()
    cursor.close()
    db.close()
    print(f'‚úñÔ∏è Connection to {path} closed')

    return users


@bot.message_handler(commands=['start'])
def start(message):
    execute_sql('bot_db.sql', 'CREATE TABLE IF NOT EXISTS users(id int auto_increment primary key, name varchar(50), pass varchar(50))')

    bot.send_message(
        message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ –≤–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è')
    bot.register_next_step_handler(message, user_name)


def user_name(message):
    global name
    name = message.text.strip()
    bot.send_message(
        message.chat.id, '–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')
    bot.register_next_step_handler(message, user_pass)


def user_pass(message):
    global password
    password = message.text.strip()
    bot.send_message(
        message.chat.id, f'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ \n –ò–º—è: {name} \n –ü–∞—Ä–æ–ª—å: {password}')

    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–í—Å–µ –≤–µ—Ä–Ω–æ')
    btn2 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')
    markup.row(btn1)
    markup.row(btn2)

    bot.send_message(
        message.chat.id, f'–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫', reply_markup=markup)
    bot.register_next_step_handler(message, finish_form)


def finish_form(message):
    if message.text == '–í—Å–µ –≤–µ—Ä–Ω–æ':
        execute_sql(
            'bot_db.sql', f'INSERT INTO users (name, pass) VALUES ("{name}", "{password}")')
        bot.send_message(
            message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞')
    elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ':
        bot.send_message(
            message.chat.id, '–ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        bot.send_message(
            message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ –≤–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è')
        bot.register_next_step_handler(message, user_name)
    else:
        bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å')


@bot.message_handler(commands=['all_users'])
def start(message):
    users = db_fetch('bot_db.sql', '*', 'users')
    list_of_users = ''
    for el in users:
        list_of_users += el[1] + ' '  + el[2] + '\n'
    bot.send_message(
        message.chat.id, '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n' + list_of_users)


@bot.message_handler()
def reply(message):
    if message.text.lower() == "hello":
        bot.send_message(message.chat.id, "Hello")
    elif message.text.lower() == "echo":
        bot.reply_to(message, message.text)
    else:
        bot.reply_to(message, "I don't know this command")


print("üöÄ Bot is running üöÄ")
bot.infinity_polling()
print("‚õî Bot stopped ‚õî")
